"use strict";(self["webpackChunktree_visualize"]=self["webpackChunktree_visualize"]||[]).push([[486],{7486:function(e,t,i){i.r(t),i.d(t,{default:function(){return p}});var l=i(6768);const r={style:{display:"flex","flex-direction":"column","min-width":"1500px",overflow:"scroll"}},d={style:{display:"flex","flex-direction":"row-reverse",overflow:"scroll","justify-content":"center"}},h={style:{display:"flex","flex-direction":"column","margin-right":"20px",width:"200px"}};function n(e,t,i,n,o,a){const s=(0,l.g2)("v-select"),u=(0,l.g2)("v-text-field"),c=(0,l.g2)("v-btn");return(0,l.uX)(),(0,l.CE)("main",r,[t[5]||(t[5]=(0,l.Lk)("div",{style:{display:"flex","font-size":"20px",color:"#4a4a4a","font-weight":"bold",padding:"10px",width:"100%","flex-direction":"row"}},[(0,l.Lk)("span",null,"树形结构可视化")],-1)),t[6]||(t[6]=(0,l.Lk)("div",{style:{height:"2px","background-color":"#8a8a8a","margin-bottom":"20px",width:"100%"}},null,-1)),(0,l.Lk)("div",d,[t[4]||(t[4]=(0,l.Lk)("div",{id:"mountNode",style:{"border-radius":"10px",border:"2px #8a8a8a solid",width:"1200px",height:"800px","margin-right":"20px"}},null,-1)),(0,l.Lk)("div",h,[(0,l.bF)(s,{variant:"outlined",modelValue:o.algorithm,"onUpdate:modelValue":t[0]||(t[0]=e=>o.algorithm=e),label:"选择算法",density:"compact",style:{"max-height":"60px"},items:["二叉排序树的构建"]},null,8,["modelValue"]),(0,l.bF)(u,{modelValue:o.nodeValueToAdd,"onUpdate:modelValue":t[1]||(t[1]=e=>o.nodeValueToAdd=e),style:{"max-height":"60px"},"single-line":"",label:"输入节点权值",variant:"outlined",density:"compact"},null,8,["modelValue"]),(0,l.bF)(c,{onClick:a.handleAddClicked,style:{"max-height":"60px",margin:"5px"},variant:"tonal"},{default:(0,l.k6)((()=>t[2]||(t[2]=[(0,l.eW)("插入节点")]))),_:1},8,["onClick"]),(0,l.bF)(c,{onClick:a.handleDeleteClicked,style:{"max-height":"60px",margin:"5px"},variant:"tonal"},{default:(0,l.k6)((()=>t[3]||(t[3]=[(0,l.eW)("删除节点")]))),_:1},8,["onClick"])])])])}i(4114);var o=i(5029);class a{constructor(e){this.treeGraph=e,this.root=null,this.idCounter=0}updateNodeIds(e){if(e.id=this.getIdCounter(),e.children&&e.children.length>0)for(let t=0;t<e.children.length;t++)this.updateNodeIds(e.children[t])}getIdCounter(){return this.idCounter++,String(this.idCounter)}async push(e){if(console.log(e),null==this.root)this.root={id:this.getIdCounter(),val:e,pos:"mid",vis:!0,children:[]},this.treeGraph.data((0,o.C)(this.root)),this.treeGraph.render(),this.treeGraph.fitView();else{var t=this.root;while(1){if(console.log("父节点的VAL",t.val),console.log(e<=t.val),0==t.children.length){Number(e)<=Number(t.val)?(t.children.push({id:this.getIdCounter(),pos:"left",val:e,vis:!0,children:[]}),t.children.push({id:this.getIdCounter(),pos:"right",val:null,vis:!1,children:[]})):(t.children.push({id:this.getIdCounter(),val:null,pos:"left",vis:!1,children:[]}),t.children.push({id:this.getIdCounter(),val:e,pos:"right",vis:!0,children:[]})),this.treeGraph.updateChildren([(0,o.C)(t.children[0]),(0,o.C)(t.children[1])],t.id);break}if(Number(e)<=Number(t.val)&&!t.children[0].vis){t.children[0].val=e,t.children[0].vis=!0,this.treeGraph.updateItem(t.children[0].id,(0,o.C)(t.children[0]));break}if(Number(e)>Number(t.val)&&!t.children[1].vis){t.children[1].val=e,t.children[1].vis=!0,this.treeGraph.updateItem(t.children[1].id,(0,o.C)(t.children[1]));break}Number(e)<=Number(t.val)?t=t.children[0]:Number(e)>Number(t.val)&&(t=t.children[1])}}this.treeGraph.fitView(50)}async pop_min(){var e=(0,o.mu)(this.root),t=(0,o.dV)(this.root,e),i=(0,o.VE)(this.root,e);if(e==this.root.id)0==this.root.children.length?(this.root=null,this.treeGraph.destroy(),this.treeGraph=(0,o.ZS)()):(this.root=(0,o.C)(this.root.children[1]),this.treeGraph.destroy(),this.treeGraph=(0,o.ZS)(),this.treeGraph.data((0,o.C)(this.root)),this.treeGraph.render(),this.treeGraph.fitView(50));else if(0==t.children.length)if(0==i.children[1].vis)(0,o.Tj)(this.root,e).children=[],this.treeGraph.updateChildren([],i.id);else{var l={id:this.getIdCounter(),pos:"left",val:null,vis:!1,children:[]};(0,o.Tj)(this.root,e).children=[(0,o.C)(l),(0,o.C)(i.children[1])],this.treeGraph.updateChildren([(0,o.C)(l),(0,o.C)(i.children[1])],i.id)}else{console.log(this.root);var r=(0,o.C)(t.children[1]);r.pos="left",this.updateNodeIds(r),(0,o.Tj)(this.root,e).children=[(0,o.C)(r),(0,o.C)(i.children[1])],console.log(this.root),this.treeGraph.updateChildren([(0,o.C)(r),(0,o.C)(i.children[1])],i.id),console.log(this.treeGraph.findDataById(this.root.id)),this.treeGraph.updateItem(t.id,(0,o.C)(t.children[1]))}}}var s={name:"TreeGraph",setup(){},data(){return{tree:null,algorithm:null,idCounter:0,valIdDict:{},addIds:[],nodeIdAdded:[],nodeValueToAdd:null,data:{}}},methods:{handleAddClicked(){if(null==this.algorithm)return void window.alert("选择一个算法");const e=this.nodeValueToAdd;this.nodeValueToAdd="",(0,o.P3)(e)?this.tree.push(String(e)):window.alert("输入节点格式必须是数字")},handleDeleteClicked(){null!=this.algorithm?null!=this.tree.root?this.tree.pop_min():window.alert("没有数据"):window.alert("选择一个算法")}},mounted(){this.tree=new a((0,o.ZS)())}},u=i(1241);const c=(0,u.A)(s,[["render",n]]);var p=c}}]);
//# sourceMappingURL=486.946392d7.js.map